using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml;

namespace UnderGMX
{
    class Sounds
    {
        public static void writeSounds(string appdirectory, string[] sndlist)
        {
            int i = 0;
            int i2 = 0;
            int length = sndlist.Length;
            string[] filecontent;
            string filecontentstr;
            XmlDocument xmldoc = new XmlDocument();
            while (i < length)
            {
                Console.WriteLine("Writing sound: " + sndlist[i]);
                filecontent = File.ReadAllLines(@appdirectory + "sounds\\" + sndlist[i] + ".xml");
                i2 = 0;
                filecontentstr = "";
                while (i2 < filecontent.Length)
                {
                    filecontentstr += (filecontent[i2] + Environment.NewLine);
                    i2++;
                }
                xmldoc.LoadXml(filecontentstr);

                //Parse Sprite XML File.
                XmlNodeList contentarr = xmldoc.GetElementsByTagName("File.AudioFile");
                XmlNode content = contentarr[0]; //Content = <File.Sprite>
                string index = content.ChildNodes[0].InnerText;
                string name = content.ChildNodes[1].InnerText;
                string extension = content.ChildNodes[3].InnerText;
                string filename = content.ChildNodes[4].InnerText;
                string effects = content.ChildNodes[5].InnerText;
                string volume = content.ChildNodes[6].InnerText;
                string pan = content.ChildNodes[7].InnerText;

                //Write sprite GMX file!
                List<String> filew = new List<String>();
                filew.Add("<!--This Document is generated by UnderGMX, if you edit it by hand then you do so at your own risk!-->");
                filew.Add("<sound>");

                if (extension == ".ogg")
                    filew.Add("  <kind>3</kind>");
                else                                   //Really confused as to what this is.
                    filew.Add("  <kind>0</kind>");

                filew.Add("  <extension>"+ extension +"</extension>"); //Not sure (read below)

                filew.Add("  <origname>sound\\audio\\"+ filename +"</origname>");

                filew.Add("  <effects>"+ effects +"</effects>"); 

                filew.Add("  <volume>");

                filew.Add("    <volume>"+ volume +"</volume>");

                filew.Add("  </volume>");

                filew.Add("  <pan>"+ pan +"</pan>");

                filew.Add("  <bitRates>"); //Don't think this is really important.
                filew.Add("    <bitRate>192</bitRate>");
                filew.Add("  </bitRates>");

                filew.Add("  <sampleRates>");
                filew.Add("    <sampleRate>44100</sampleRate>"); //Couldn't find any traces in XML file...
                filew.Add("  </sampleRates>");

                filew.Add("  <types>"); //May be the <other> tag, but not entirely sure.
                filew.Add("    <type>0</type>");
                filew.Add("  </types>");

                filew.Add("  <bitDepths>"); //No traces in XML file!
                filew.Add("    <bitDepth>16</bitDepth>");
                filew.Add("  </bitDepths>");

                filew.Add("  <preload>-1</preload>"); //Nothing in the XML.

                filew.Add("  <data>"+ filename +"</data>"); //Why is this variable needed?

                if(extension == ".ogg")
                {
                    filew.Add("  <compressed>1</compressed>");
                    filew.Add("  <streamed>1</streamed>");
                } else
                {
                    filew.Add("  <compressed>0</compressed>");
                    filew.Add("  <streamed>0</streamed>");
                }

                filew.Add("  <uncompressOnLoad>0</uncompressOnLoad>");

                filew.Add("  <audioGroup>0</audioGroup>"); //IDK.

                filew.Add("</sound>"); //Good night.

                int wi = 0;
                while (wi < filew.ToArray().Length)
                {
                    using (var dest = File.AppendText(Path.Combine(@appdirectory + "UnderGMX.gmx\\sound\\", sndlist[i] + ".sound.gmx")))
                    {
                        dest.Write(filew.ToArray()[wi] + Environment.NewLine);
                    }
                    wi++;
                }

                i++;
            }
        }
        public static void copySounds(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "sounds\\");
            FileInfo[] Files = d.GetFiles("*.wav");
            int i = 0;
            if (!Directory.Exists(@appdirectory + "UnderGMX.gmx\\sound\\audio\\"))
                Directory.CreateDirectory(@appdirectory + "UnderGMX.gmx\\sound\\audio\\");
            while (i < Files.Length)
            {
                Console.WriteLine("Copying Sound Effect: " + Files[i].Name);
                File.Copy(Files[i].FullName, @appdirectory + "UnderGMX.gmx\\sound\\audio\\" + Files[i].Name, true);
                i++;
            }
            Files = d.GetFiles("*.ogg");
            int i2 = 0;
            if (!Directory.Exists(@appdirectory + "UnderGMX.gmx\\sound\\audio\\"))
                Directory.CreateDirectory(@appdirectory + "UnderGMX.gmx\\sound\\audio\\");
            while (i2 < Files.Length)
            {
                Console.WriteLine("Copying Music: " + Files[i2].Name);
                File.Copy(Files[i2].FullName, @appdirectory + "UnderGMX.gmx\\sound\\audio\\" + Files[i2].Name, true);
                i2++;
            }
            Files = d.GetFiles("*.mp3");
            int i3 = 0;
            if (!Directory.Exists(@appdirectory + "UnderGMX.gmx\\sound\\audio\\"))
                Directory.CreateDirectory(@appdirectory + "UnderGMX.gmx\\sound\\audio\\");
            while (i3 < Files.Length)
            {
                Console.WriteLine("Copying Music: " + Files[i3].Name);
                File.Copy(Files[i3].FullName, @appdirectory + "UnderGMX.gmx\\sound\\audio\\" + Files[i3].Name, true);
                i3++;
            }
        }
        public static String[] getSoundDataNames(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "sounds\\");
            FileInfo[] Files = d.GetFiles("*.xml");
            string[] filecontent = { };
            List<String> soundlist = new List<String>();
            string[] split = { };
            int index = 0;
            int i = 0;
            int i2 = 0;
            while (i2 < Files.Length-1)
            {
                while (i < Files.Length)
                {
                    filecontent = File.ReadAllLines(@appdirectory + "sounds\\" + Files[i].Name);
                    split = filecontent[0].Split('>');
                    if (split[2].Remove(split[2].Length - 7) == index.ToString())
                    {
                        soundlist.Add(Files[i].Name.Remove(Files[i].Name.Length - 4));
                        Console.WriteLine("Loading Sound: " + Files[i].Name.Remove(Files[i].Name.Length - 4));
                        index++;
                        i = 999999999;
                    }
                    i++;
                }
                i = 0;
                i2++;
            }
            return soundlist.ToArray();
        }
    }
}
