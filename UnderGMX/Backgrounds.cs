using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Xml;

namespace UnderGMX
{
    class Backgrounds
    {
        public static void writeBackgrounds(string appdirectory, string[] bglist)
        {
            int i = 0;
            int i2 = 0;
            int length = bglist.Length;
            string[] filecontent;
            string filecontentstr;
            XmlDocument xmldoc = new XmlDocument();
            while (i < length)
            {
                Console.WriteLine("Writing background: " + bglist[i]);
                filecontent = File.ReadAllLines(@appdirectory + "backgrounds\\" + bglist[i] + ".xml");
                i2 = 0;
                filecontentstr = "";
                while (i2 < filecontent.Length)
                {
                    filecontentstr += (filecontent[i2] + Environment.NewLine);
                    i2++;
                }
                xmldoc.LoadXml(filecontentstr);

                //Parse Sprite XML File.
                XmlNodeList contentarr = xmldoc.GetElementsByTagName("File.Background");
                XmlNode content = contentarr[0]; //Content = <File.background>
                string index = content.ChildNodes[0].InnerText;
                //string width = content.ChildNodes[9].InnerText;
                //string height = content.ChildNodes[10].InnerText;
                //string left = content.ChildNodes[4].InnerText;
                //string right = content.ChildNodes[5].InnerText;
                //string bottom = content.ChildNodes[6].InnerText;
                //string top = content.ChildNodes[7].InnerText;
                //string mode = content.ChildNodes[11].InnerText;
                //string origx = content.ChildNodes[13].InnerText;
                //string origy = content.ChildNodes[14].InnerText;
                //string type = content.ChildNodes[15].InnerText;

                XmlNode frame = content.ChildNodes[5];

                XmlNodeList framenodes = frame.ChildNodes;

                string width = framenodes[3].InnerText;
                string height = framenodes[4].InnerText;
                string offx = framenodes[5].InnerText;
                string offy = framenodes[6].InnerText;

                //Write sprite GMX file!
                List<String> filew = new List<String>();
                filew.Add("<!--This Document is generated by UnderGMX, if you edit it by hand then you do so at your own risk!-->");
                filew.Add("<background>");

                filew.Add("  <istileset>0</istileset>"); //Not supported yet.

                filew.Add("  <tilewidth>16</tilewidth>"); //Not supported yet.
                filew.Add("  <tileheight>16</tileheight>"); //Not supported yet.

                filew.Add("  <tilexoff>" + offx +"</tilexoff>");
                filew.Add("  <tileyoff>" + offy + "</tileyoff>");

                filew.Add("  <tilehsep>0</tilehsep>"); //Don't know where this is!
                filew.Add("  <tilevsep>0</tilevsep>"); //Don't know where this is!

                filew.Add("  <HTile>-1</HTile>"); //Couldn't find any traces in XML file...
                filew.Add("  <VTile>-1</VTile>"); //Same here.

                filew.Add("  <TextureGroups>"); //Not sure how important this part is.
                filew.Add("    <TextureGroup0>0</TextureGroup0>");
                filew.Add("  </TextureGroups>");

                filew.Add("  <For3D>0</For3D>"); //No traces in XML file!

                filew.Add("  <width>" + width + "</width>"); //Aaaah.... feels nice to have proper variables.
                filew.Add("  <height>" + height + "</height>");

                filew.Add("  <data>images\\" + bglist[i] + ".png</data>"); //Good thing the XML file has this stuff.

                filew.Add("</background>"); //Good night.

                //int testi = 0;
                //while(testi < filew.ToArray().Length)
                //{
                //    Console.WriteLine(filew.ToArray()[testi]);
                //    testi++;
                //}
                int wi = 0;
                while (wi < filew.ToArray().Length)
                {
                    using (var dest = File.AppendText(Path.Combine(@appdirectory + "UnderGMX.gmx\\background\\", bglist[i] + ".background.gmx")))
                    {
                        dest.Write(filew.ToArray()[wi] + Environment.NewLine);
                    }
                    wi++;
                }

                i++;
            }
        }
        public static void copyBackgrounds(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "backgrounds\\");
            FileInfo[] Files = d.GetFiles("*.png");
            int i = 0;
            if (!Directory.Exists(@appdirectory + "UnderGMX.gmx\\background\\images\\"))
                Directory.CreateDirectory(@appdirectory + "UnderGMX.gmx\\background\\images\\");
            while (i < Files.Length)
            {
                Console.WriteLine("Copying Image: " + Files[i].Name);
                File.Copy(Files[i].FullName, @appdirectory + "UnderGMX.gmx\\background\\images\\" + Files[i].Name, true);
                i++;
            }
        }
        public static String[] getBackgroundDataNames(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "backgrounds\\");
            FileInfo[] Files = d.GetFiles("*.xml");
            string[] filecontent = { };
            List<String> bglist = new List<String>();
            string[] split = { };
            int index = 0;
            int i = 0;
            int i2 = 0;
            while (i2 < Files.Length)
            {
                while (i < Files.Length)
                {
                    filecontent = File.ReadAllLines(@appdirectory + "backgrounds\\" + Files[i].Name);
                    split = filecontent[0].Split('>');
                    if (split[2].Remove(split[2].Length - 7) == index.ToString())
                    {
                        bglist.Add(Files[i].Name.Remove(Files[i].Name.Length - 4));
                        Console.WriteLine("Loading Background: " + Files[i].Name.Remove(Files[i].Name.Length - 4));
                        index++;
                        i = 999999999;
                    }
                    i++;
                }
                i = 0;
                i2++;
            }
            return bglist.ToArray();
        }
    }
}
