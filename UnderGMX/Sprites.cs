using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Threading.Tasks;
using System.Xml;

namespace UnderGMX
{
    class Sprites
    {
        public static void writeSprites(string appdirectory, string[] sprlist)
        {
            int i = 0;
            int i2 = 0;
            int length = sprlist.Length;
            string[] filecontent;
            string filecontentstr;
            XmlDocument xmldoc = new XmlDocument();
            while(i < length)
            {
                Console.WriteLine("Writing sprite "+sprlist[i]);
                filecontent = File.ReadAllLines(@appdirectory + "sprites\\" + sprlist[i] + ".xml");
                i2 = 0;
                filecontentstr = "";
                while(i2 < filecontent.Length)
                {
                    filecontentstr += (filecontent[i2] + Environment.NewLine);
                    i2++;
                }
                xmldoc.LoadXml(filecontentstr);

                //Parse Sprite XML File.
                XmlNodeList contentarr = xmldoc.GetElementsByTagName("File.Sprite");
                XmlNode content = contentarr[0]; //Content = <File.Sprite>
                string index = content.ChildNodes[0].InnerText;
                string width = content.ChildNodes[2].InnerText;
                string height = content.ChildNodes[3].InnerText;
                string left = content.ChildNodes[4].InnerText;
                string right = content.ChildNodes[5].InnerText;
                string bottom = content.ChildNodes[6].InnerText;
                string top = content.ChildNodes[7].InnerText;
                string mode = content.ChildNodes[11].InnerText;
                string origx = content.ChildNodes[13].InnerText;
                string origy = content.ChildNodes[14].InnerText;
                string type = content.ChildNodes[15].InnerText;

                XmlNodeList frames = content.ChildNodes[17].ChildNodes;
                List<XmlNodeList> framedata = new List<XmlNodeList>();

                int framenum = frames.Count;
                int framei = 0;
                while(framei < framenum)
                {
                    //framedata.Add(frames[i].ChildNodes); //Add all nodes from File.SpriteFrame into framedata list. (NOT USED BECAUSE OF BUG) Currently not much useful other than getting indexes.
                    framei++;
                }
                framei = 0;
                List<String> animText = new List<String>();
                XmlNodeList[] frmdata = framedata.ToArray();
                while(framei < framenum)
                {
                    animText.Add("    <frame index=\""+framei.ToString()+ "\">images\\"+sprlist[i]+"_" + framei.ToString() + ".png</frame>");
                    framei++;
                }
                string[] animTextArr = animText.ToArray();
                if(animTextArr.Length == 1)
                {
                    animTextArr[0] = "    <frame index=\"0\">images\\" + sprlist[i] + ".png</frame>";
                }

                //Write sprite GMX file!
                List<String> filew = new List<String>();
                filew.Add("<!--This Document is generated by UnderGMX, if you edit it by hand then you do so at your own risk!-->");
                filew.Add("<sprite>");

                filew.Add("  <type>" + type + "</type>");

                filew.Add("  <xorig>" + origx +"</xorig>"); //Not sure (read below)
                filew.Add("  <yorigin>" + origy + "</yorigin>"); //Not sure if it is the proper variable.

                filew.Add("  <colkind>0</colkind>"); //Dunno where this would be.

                filew.Add("  <coltolerance>0</coltolerance>"); //Dunno where this would be.

                filew.Add("  <sepmasks>0</sepmasks>"); //Also don't know where this is! It's for separated masks, but where do I find that..?

                filew.Add("  <bboxmode>" + mode + "</bboxmode>");

                filew.Add("  <bbox_left>" + left + "</bbox_left>");

                filew.Add("  <bbox_right>" + right + "</bbox_right>");

                filew.Add("  <bbox_top>" + top + "</bbox_top>");

                filew.Add("  <bbox_bottom>" + bottom + "</bbox_bottom>");

                filew.Add("  <HTile>0</HTile>"); //Couldn't find any traces in XML file...
                filew.Add("  <VTile>0</VTile>"); //Same here.

                filew.Add("  <TextureGroups>"); //Not sure how important this part is.
                filew.Add("    <TextureGroup0>0</TextureGroup0>");
                filew.Add("  </TextureGroups>");

                filew.Add("  <For3D>0</For3D>"); //No traces in XML file!

                filew.Add("  <width>" + width + "</width>"); //Aaaah.... feels nice to have proper variables.
                filew.Add("  <height>" + height + "</height>");

                filew.Add("  <frames>"); //Good thing the XML file has this stuff.

                int fi = 0;
                while(fi < animTextArr.Length)
                {
                    filew.Add(animTextArr[fi]);
                    fi++;
                }

                filew.Add("  </frames>");

                filew.Add("</sprite>"); //Good night.

                //int testi = 0;
                //while(testi < filew.ToArray().Length)
                //{
                //    Console.WriteLine(filew.ToArray()[testi]);
                //    testi++;
                //}
                int wi = 0;
                while (wi < filew.ToArray().Length)
                {
                    using (var dest = File.AppendText(Path.Combine(@appdirectory + "UnderGMX.gmx\\sprites\\", sprlist[i] + ".sprite.gmx")))
                    {
                        dest.Write(filew.ToArray()[wi]+Environment.NewLine);
                    }
                    wi++;
                }

                i++;
            }
        }
        public static void copySprites(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "sprites\\");
            FileInfo[] Files = d.GetFiles("*.png");
            int i = 0;
            if (!Directory.Exists(@appdirectory + "UnderGMX.gmx\\sprites\\images\\"))
                Directory.CreateDirectory(@appdirectory + "UnderGMX.gmx\\sprites\\images\\");
            while(i < Files.Length)
            {
                Console.WriteLine("Copying Image: " + Files[i].Name);
                File.Copy(Files[i].FullName, @appdirectory + "UnderGMX.gmx\\sprites\\images\\" + Files[i].Name, true);
                i++;
            }
        }
        public static String[] getSpriteDataNames(string appdirectory)
        {
            DirectoryInfo d = new DirectoryInfo(@appdirectory + "sprites\\");
            FileInfo[] Files = d.GetFiles("*.xml");
            string[] filecontent = { };
            List<String> spritelist = new List<String>();
            string[] split = { };
            int index = 0;
            int i = 0;
            int i2 = 0;
            while (i2 < Files.Length)
            {
                while (i < Files.Length)
                {
                    filecontent = File.ReadAllLines(@appdirectory + "sprites\\" + Files[i].Name);
                    split = filecontent[0].Split('>');
                    if (split[2].Remove(split[2].Length - 7) == index.ToString())
                    {
                        spritelist.Add(Files[i].Name.Remove(Files[i].Name.Length - 4));
                        Console.WriteLine("Loading Sprite: "+Files[i].Name.Remove(Files[i].Name.Length - 4));
                        index++;
                        i = 999999999;
                    }
                    i++;
                }
                i = 0;
                i2++;
            }
            return spritelist.ToArray();
        }
    }
}
